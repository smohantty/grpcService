// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: RayVision.proto
// Protobuf C++ Version: 5.29.3

#include "RayVision.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace rayvisiongrpc {

inline constexpr ImageData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : buffer_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        width_{0},
        height_{0},
        colorspace_{static_cast< ::rayvisiongrpc::ColorSpace >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ImageData::ImageData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ImageDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImageDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImageDataDefaultTypeInternal() {}
  union {
    ImageData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImageDataDefaultTypeInternal _ImageData_default_instance_;

inline constexpr GetImageRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{static_cast< ::rayvisiongrpc::CameraType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetImageRequest::GetImageRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetImageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetImageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetImageRequestDefaultTypeInternal() {}
  union {
    GetImageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetImageRequestDefaultTypeInternal _GetImageRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Empty::Empty(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct EmptyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmptyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmptyDefaultTypeInternal() {}
  union {
    Empty _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmptyDefaultTypeInternal _Empty_default_instance_;

inline constexpr SegmentationResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : segments_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SegmentationResult::SegmentationResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SegmentationResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SegmentationResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SegmentationResultDefaultTypeInternal() {}
  union {
    SegmentationResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SegmentationResultDefaultTypeInternal _SegmentationResult_default_instance_;
}  // namespace rayvisiongrpc
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_RayVision_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_RayVision_2eproto = nullptr;
const ::uint32_t
    TableStruct_RayVision_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rayvisiongrpc::ImageData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rayvisiongrpc::ImageData, _impl_.width_),
        PROTOBUF_FIELD_OFFSET(::rayvisiongrpc::ImageData, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::rayvisiongrpc::ImageData, _impl_.colorspace_),
        PROTOBUF_FIELD_OFFSET(::rayvisiongrpc::ImageData, _impl_.buffer_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rayvisiongrpc::GetImageRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rayvisiongrpc::GetImageRequest, _impl_.type_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rayvisiongrpc::Empty, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rayvisiongrpc::SegmentationResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rayvisiongrpc::SegmentationResult, _impl_.segments_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::rayvisiongrpc::ImageData)},
        {12, -1, -1, sizeof(::rayvisiongrpc::GetImageRequest)},
        {21, -1, -1, sizeof(::rayvisiongrpc::Empty)},
        {29, -1, -1, sizeof(::rayvisiongrpc::SegmentationResult)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::rayvisiongrpc::_ImageData_default_instance_._instance,
    &::rayvisiongrpc::_GetImageRequest_default_instance_._instance,
    &::rayvisiongrpc::_Empty_default_instance_._instance,
    &::rayvisiongrpc::_SegmentationResult_default_instance_._instance,
};
const char descriptor_table_protodef_RayVision_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\017RayVision.proto\022\rrayvisiongrpc\"i\n\tImag"
    "eData\022\r\n\005width\030\001 \001(\005\022\016\n\006height\030\002 \001(\005\022-\n\n"
    "colorspace\030\003 \001(\0162\031.rayvisiongrpc.ColorSp"
    "ace\022\016\n\006buffer\030\004 \001(\014\":\n\017GetImageRequest\022\'"
    "\n\004type\030\001 \001(\0162\031.rayvisiongrpc.CameraType\""
    "\007\n\005Empty\"@\n\022SegmentationResult\022*\n\010segmen"
    "ts\030\001 \003(\0132\030.rayvisiongrpc.ImageData*(\n\nCa"
    "meraType\022\010\n\004HEAD\020\000\022\010\n\004BODY\020\001\022\006\n\002IR\020\002*\037\n\n"
    "ColorSpace\022\007\n\003RGB\020\000\022\010\n\004GRAY\020\0012\242\001\n\rRayVis"
    "ionGrpc\022D\n\010GetImage\022\036.rayvisiongrpc.GetI"
    "mageRequest\032\030.rayvisiongrpc.ImageData\022K\n"
    "\016doSegmentation\022\024.rayvisiongrpc.Empty\032!."
    "rayvisiongrpc.SegmentationResult0\001b\006prot"
    "o3"
};
static ::absl::once_flag descriptor_table_RayVision_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_RayVision_2eproto = {
    false,
    false,
    522,
    descriptor_table_protodef_RayVision_2eproto,
    "RayVision.proto",
    &descriptor_table_RayVision_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_RayVision_2eproto::offsets,
    file_level_enum_descriptors_RayVision_2eproto,
    file_level_service_descriptors_RayVision_2eproto,
};
namespace rayvisiongrpc {
const ::google::protobuf::EnumDescriptor* CameraType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_RayVision_2eproto);
  return file_level_enum_descriptors_RayVision_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t CameraType_internal_data_[] = {
    196608u, 0u, };
bool CameraType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* ColorSpace_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_RayVision_2eproto);
  return file_level_enum_descriptors_RayVision_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t ColorSpace_internal_data_[] = {
    131072u, 0u, };
bool ColorSpace_IsValid(int value) {
  return 0 <= value && value <= 1;
}
// ===================================================================

class ImageData::_Internal {
 public:
};

ImageData::ImageData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rayvisiongrpc.ImageData)
}
inline PROTOBUF_NDEBUG_INLINE ImageData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rayvisiongrpc::ImageData& from_msg)
      : buffer_(arena, from.buffer_),
        _cached_size_{0} {}

ImageData::ImageData(
    ::google::protobuf::Arena* arena,
    const ImageData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ImageData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, width_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, width_),
           offsetof(Impl_, colorspace_) -
               offsetof(Impl_, width_) +
               sizeof(Impl_::colorspace_));

  // @@protoc_insertion_point(copy_constructor:rayvisiongrpc.ImageData)
}
inline PROTOBUF_NDEBUG_INLINE ImageData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : buffer_(arena),
        _cached_size_{0} {}

inline void ImageData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, width_),
           0,
           offsetof(Impl_, colorspace_) -
               offsetof(Impl_, width_) +
               sizeof(Impl_::colorspace_));
}
ImageData::~ImageData() {
  // @@protoc_insertion_point(destructor:rayvisiongrpc.ImageData)
  SharedDtor(*this);
}
inline void ImageData::SharedDtor(MessageLite& self) {
  ImageData& this_ = static_cast<ImageData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.buffer_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ImageData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ImageData(arena);
}
constexpr auto ImageData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ImageData),
                                            alignof(ImageData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ImageData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ImageData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ImageData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ImageData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ImageData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ImageData>(), &ImageData::ByteSizeLong,
            &ImageData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ImageData, _impl_._cached_size_),
        false,
    },
    &ImageData::kDescriptorMethods,
    &descriptor_table_RayVision_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ImageData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> ImageData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rayvisiongrpc::ImageData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes buffer = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ImageData, _impl_.buffer_)}},
    // int32 width = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ImageData, _impl_.width_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ImageData, _impl_.width_)}},
    // int32 height = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ImageData, _impl_.height_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ImageData, _impl_.height_)}},
    // .rayvisiongrpc.ColorSpace colorspace = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ImageData, _impl_.colorspace_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ImageData, _impl_.colorspace_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 width = 1;
    {PROTOBUF_FIELD_OFFSET(ImageData, _impl_.width_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 height = 2;
    {PROTOBUF_FIELD_OFFSET(ImageData, _impl_.height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .rayvisiongrpc.ColorSpace colorspace = 3;
    {PROTOBUF_FIELD_OFFSET(ImageData, _impl_.colorspace_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bytes buffer = 4;
    {PROTOBUF_FIELD_OFFSET(ImageData, _impl_.buffer_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ImageData::Clear() {
// @@protoc_insertion_point(message_clear_start:rayvisiongrpc.ImageData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.buffer_.ClearToEmpty();
  ::memset(&_impl_.width_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.colorspace_) -
      reinterpret_cast<char*>(&_impl_.width_)) + sizeof(_impl_.colorspace_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ImageData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ImageData& this_ = static_cast<const ImageData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ImageData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ImageData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rayvisiongrpc.ImageData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 width = 1;
          if (this_._internal_width() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_width(), target);
          }

          // int32 height = 2;
          if (this_._internal_height() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_height(), target);
          }

          // .rayvisiongrpc.ColorSpace colorspace = 3;
          if (this_._internal_colorspace() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_colorspace(), target);
          }

          // bytes buffer = 4;
          if (!this_._internal_buffer().empty()) {
            const std::string& _s = this_._internal_buffer();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rayvisiongrpc.ImageData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ImageData::ByteSizeLong(const MessageLite& base) {
          const ImageData& this_ = static_cast<const ImageData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ImageData::ByteSizeLong() const {
          const ImageData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rayvisiongrpc.ImageData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes buffer = 4;
            if (!this_._internal_buffer().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_buffer());
            }
            // int32 width = 1;
            if (this_._internal_width() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_width());
            }
            // int32 height = 2;
            if (this_._internal_height() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_height());
            }
            // .rayvisiongrpc.ColorSpace colorspace = 3;
            if (this_._internal_colorspace() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_colorspace());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ImageData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ImageData*>(&to_msg);
  auto& from = static_cast<const ImageData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rayvisiongrpc.ImageData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_buffer().empty()) {
    _this->_internal_set_buffer(from._internal_buffer());
  }
  if (from._internal_width() != 0) {
    _this->_impl_.width_ = from._impl_.width_;
  }
  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  if (from._internal_colorspace() != 0) {
    _this->_impl_.colorspace_ = from._impl_.colorspace_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ImageData::CopyFrom(const ImageData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rayvisiongrpc.ImageData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ImageData::InternalSwap(ImageData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.buffer_, &other->_impl_.buffer_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImageData, _impl_.colorspace_)
      + sizeof(ImageData::_impl_.colorspace_)
      - PROTOBUF_FIELD_OFFSET(ImageData, _impl_.width_)>(
          reinterpret_cast<char*>(&_impl_.width_),
          reinterpret_cast<char*>(&other->_impl_.width_));
}

::google::protobuf::Metadata ImageData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetImageRequest::_Internal {
 public:
};

GetImageRequest::GetImageRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rayvisiongrpc.GetImageRequest)
}
GetImageRequest::GetImageRequest(
    ::google::protobuf::Arena* arena, const GetImageRequest& from)
    : GetImageRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GetImageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetImageRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
GetImageRequest::~GetImageRequest() {
  // @@protoc_insertion_point(destructor:rayvisiongrpc.GetImageRequest)
  SharedDtor(*this);
}
inline void GetImageRequest::SharedDtor(MessageLite& self) {
  GetImageRequest& this_ = static_cast<GetImageRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GetImageRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetImageRequest(arena);
}
constexpr auto GetImageRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetImageRequest),
                                            alignof(GetImageRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetImageRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetImageRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetImageRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetImageRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetImageRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetImageRequest>(), &GetImageRequest::ByteSizeLong,
            &GetImageRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetImageRequest, _impl_._cached_size_),
        false,
    },
    &GetImageRequest::kDescriptorMethods,
    &descriptor_table_RayVision_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetImageRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> GetImageRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rayvisiongrpc::GetImageRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .rayvisiongrpc.CameraType type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetImageRequest, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetImageRequest, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .rayvisiongrpc.CameraType type = 1;
    {PROTOBUF_FIELD_OFFSET(GetImageRequest, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GetImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rayvisiongrpc.GetImageRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetImageRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetImageRequest& this_ = static_cast<const GetImageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetImageRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetImageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rayvisiongrpc.GetImageRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .rayvisiongrpc.CameraType type = 1;
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rayvisiongrpc.GetImageRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetImageRequest::ByteSizeLong(const MessageLite& base) {
          const GetImageRequest& this_ = static_cast<const GetImageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetImageRequest::ByteSizeLong() const {
          const GetImageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rayvisiongrpc.GetImageRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .rayvisiongrpc.CameraType type = 1;
            if (this_._internal_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetImageRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetImageRequest*>(&to_msg);
  auto& from = static_cast<const GetImageRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rayvisiongrpc.GetImageRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetImageRequest::CopyFrom(const GetImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rayvisiongrpc.GetImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetImageRequest::InternalSwap(GetImageRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata GetImageRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Empty::_Internal {
 public:
};

Empty::Empty(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:rayvisiongrpc.Empty)
}
Empty::Empty(
    ::google::protobuf::Arena* arena,
    const Empty& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Empty* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:rayvisiongrpc.Empty)
}

inline void* Empty::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Empty(arena);
}
constexpr auto Empty::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Empty),
                                            alignof(Empty));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Empty::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Empty_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Empty::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<Empty>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Empty::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<Empty>(), &Empty::ByteSizeLong,
            &Empty::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Empty, _impl_._cached_size_),
        false,
    },
    &Empty::kDescriptorMethods,
    &descriptor_table_RayVision_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Empty::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> Empty::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rayvisiongrpc::Empty>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata Empty::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SegmentationResult::_Internal {
 public:
};

SegmentationResult::SegmentationResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rayvisiongrpc.SegmentationResult)
}
inline PROTOBUF_NDEBUG_INLINE SegmentationResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rayvisiongrpc::SegmentationResult& from_msg)
      : segments_{visibility, arena, from.segments_},
        _cached_size_{0} {}

SegmentationResult::SegmentationResult(
    ::google::protobuf::Arena* arena,
    const SegmentationResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SegmentationResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:rayvisiongrpc.SegmentationResult)
}
inline PROTOBUF_NDEBUG_INLINE SegmentationResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : segments_{visibility, arena},
        _cached_size_{0} {}

inline void SegmentationResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SegmentationResult::~SegmentationResult() {
  // @@protoc_insertion_point(destructor:rayvisiongrpc.SegmentationResult)
  SharedDtor(*this);
}
inline void SegmentationResult::SharedDtor(MessageLite& self) {
  SegmentationResult& this_ = static_cast<SegmentationResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SegmentationResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SegmentationResult(arena);
}
constexpr auto SegmentationResult::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SegmentationResult, _impl_.segments_) +
          decltype(SegmentationResult::_impl_.segments_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SegmentationResult), alignof(SegmentationResult), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SegmentationResult::PlacementNew_,
                                 sizeof(SegmentationResult),
                                 alignof(SegmentationResult));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SegmentationResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SegmentationResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SegmentationResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SegmentationResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SegmentationResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SegmentationResult>(), &SegmentationResult::ByteSizeLong,
            &SegmentationResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SegmentationResult, _impl_._cached_size_),
        false,
    },
    &SegmentationResult::kDescriptorMethods,
    &descriptor_table_RayVision_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SegmentationResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SegmentationResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rayvisiongrpc::SegmentationResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .rayvisiongrpc.ImageData segments = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SegmentationResult, _impl_.segments_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .rayvisiongrpc.ImageData segments = 1;
    {PROTOBUF_FIELD_OFFSET(SegmentationResult, _impl_.segments_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rayvisiongrpc::ImageData>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SegmentationResult::Clear() {
// @@protoc_insertion_point(message_clear_start:rayvisiongrpc.SegmentationResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.segments_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SegmentationResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SegmentationResult& this_ = static_cast<const SegmentationResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SegmentationResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SegmentationResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rayvisiongrpc.SegmentationResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .rayvisiongrpc.ImageData segments = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_segments_size());
               i < n; i++) {
            const auto& repfield = this_._internal_segments().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rayvisiongrpc.SegmentationResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SegmentationResult::ByteSizeLong(const MessageLite& base) {
          const SegmentationResult& this_ = static_cast<const SegmentationResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SegmentationResult::ByteSizeLong() const {
          const SegmentationResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rayvisiongrpc.SegmentationResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .rayvisiongrpc.ImageData segments = 1;
            {
              total_size += 1UL * this_._internal_segments_size();
              for (const auto& msg : this_._internal_segments()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SegmentationResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SegmentationResult*>(&to_msg);
  auto& from = static_cast<const SegmentationResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rayvisiongrpc.SegmentationResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_segments()->MergeFrom(
      from._internal_segments());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SegmentationResult::CopyFrom(const SegmentationResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rayvisiongrpc.SegmentationResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SegmentationResult::InternalSwap(SegmentationResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.segments_.InternalSwap(&other->_impl_.segments_);
}

::google::protobuf::Metadata SegmentationResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace rayvisiongrpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_RayVision_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
